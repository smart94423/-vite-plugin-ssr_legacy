- assert that two import statements in +config.js shouldn't land in different environments

Later:
 - restructure getConfigData()
   - make it work to import a config-only value, for example:
     - base assets: https://github.com/brillout/vite-plugin-ssr/commit/24a92cf79a0533ab4b0fa124675385f462302e1e
     - e.g. `import { prerender } from '../some-file'` in `/pages/index/+config.js`
   - improve isGlobal() logic (the special handling of the configName 'prerender' is hacky)
   - Minimize what that client-side loads
 - error handling
   - Don't stop dev sever upon error in getConfigData()
     - make handleConfigError() wrap entire getConfigData() call
     - `console.err(err)` instead of `throw Error()` in dev as well
     - Use some kind of flag and make VPS return `pageContext.httpResponse = null`
   - Check overall error handling
   - Check error handling when no onRenderHtml defined
   - assertUsage isErrorPage not allowed to be abstract
   - assertUsage when meta sets a invalid env value
   - Throw errors and show warnings after dev start + errors shoulnd't exit the dev server
   - Make "unkown config" a warning?
     - How can we make sure the user doens't miss the warning? Maybe be make the warnings `onlyOnce: fase` and/or setting Vite's `clearScreen: false`
   - Refactor renderPage() / addSsrMiddleware() error hanlding
     - Respect natural order of error occurence by never clearing screen except *after* the error is resolved
     - Change Vite's default clearScreen value to false
 - Implements TODO comments

Features:
 - multiple error pages
 - nested layouts

Sometime:
 - use `type: "module"` in boilerplates
 - remove documentProps from examples and boilerplates

After stable release:
 - Remove 0.4 design examples
   - Update all links to /examples/*-v1
 - Add deprecation warning for pageContext.exports

After Vike rename:
 - Implement vike.config.js
   - Move all globals there and add migration warnings

Contact:
 - Bun
 - Payload CMS
   - Other CMS-related tools like Tina CMS
 - Shopify
 - Deno Deploy
 - Cloudflare Workers
 - UI frameworks like qwik (maybe even Angular)
   - See `pnpm create vite@latest` for a list of UI frameworks

{
  "private": true,
  "// We don't add examples/** nor boilerplates/** to `workspaces` because we have a custom linkage logic": "",
  "workspaces": [
    "vite-plugin-ssr/",
    "libframe/scripts/",
    "libframe/test/"
  ],
  "scripts": {
    "========= Demo": "",
    "demo": "cd examples/react/ && npm run install && npm run start",
    "========= Test": "",
    "// Run tests": "",
    "test": "cd libframe/test/ && yarn test",
    "// Run `$ yarn test:setup` before running `$ yarn test`": "",
    "test:setup": "yarn install && yarn install:examples && yarn link && yarn build",
    "========= Dev": "",
    "// Develop vite-plugin-ssr": "",
    "dev": "cd vite-plugin-ssr/ && yarn dev",
    "// Run `$ yarn dev:setup` before running `$ yarn dev`": "",
    "dev:setup": "yarn install && yarn install:examples && yarn link",
    "========= Build": "",
    "// Build vite-plugin-ssr": "",
    "build": "cd vite-plugin-ssr/ && yarn build",
    "========= Install & linkage": "",
    "// Fetch the libframe/ workspace so that its dependencies are installed as well": "",
    "preinstall": "bash -c '[[ `git submodule status libframe` == -* ]] && git submodule update --init libframe/ || :'",
    "// Install dependencies of all examples and boilerplates": "",
    "install:examples": "cd libframe/scripts/ && yarn install:examples",
    "// Symlink **/node_modules/vite-plugin-ssr/ to /vite-plugin-ssr/": "",
    "link": "cd libframe/scripts/ && yarn link",
    "// Install **/node_modules/vite-plugin-ssr/ from npm registry": "",
    "unlink": "cd libframe/scripts/ && yarn unlink",
    "// Symlink **/node_modules/vite/ to local Vite build": "",
    "link-vite": "cd libframe/scripts/ && yarn link-vite",
    "// Install **/node_modules/vite/ from npm registry": "",
    "unlink-vite": "cd libframe/scripts/ && yarn link-vite",
    "// Update dependencies of `vite-plugin-ssr/`, examples, and boilerplates": "",
    "bump": "cd libframe/scripts/ && yarn bump",
    "========= Release": "",
    "release": "cd libframe/scripts/ && yarn release",
    "========= Clean": "",
    "// Remove all generated files": "",
    "clean": "git clean -Xdf"
  }
}
